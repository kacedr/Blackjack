Index: src/main/java/javaFxFront.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n* Author: Kyle Gleason, Conor West\n* This class is what runs the front end UI of the black jack game.\n*\n* */\nimport javafx.application.Application;\nimport javafx.beans.value.ChangeListener;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.geometry.Insets;\nimport javafx.geometry.Pos;\nimport javafx.scene.Node;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.image.Image;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.*;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\nimport javafx.util.Pair;\nimport java.util.HashMap;\nimport java.util.Optional;\n\npublic class javaFxFront extends Application {\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n\n    // Core game components\n    private BlackjackGame bGame; // Initialize like: bGame = new BlackjackGame()\n    private HashMap<String, Scene> sceneMap = new HashMap<>();\n    private Stage primary;\n\n    // Background elements\n    private Image cas = new Image(\"casinobackground.jpg\");\n    private ImageView casBack = new ImageView(cas);\n\n    // User input\n    private TextField moneyprompt;\n    private double money;\n\n    // Scene components: setup scene\n    private Button start;\n    private TextField betInput;\n    private Label moneyLabel;\n    private VBox v1;\n    private HBox h1;\n\n    // Scene components: game scene\n    private Button exit, hit, stay, betlabel; // betlabel sets the bet at the start of each hand\n    private Label yScore, dScore, centerPop, moneyamt;\n    private HBox pCards, dCards;\n    private VBox centerGame, leftGame, rightGame;\n    private Button play, help;\n    private Label blackjack;\n\n    // Game settings\n    private int deckAmount = 1; // Default value\n    private double cutCard = 0.30; // Default value\n\n    // Additional fields\n    private String moneyamtlabel;\n\n\n    @Override\n    public void start(Stage primaryStage) throws Exception {\n        primary = primaryStage;\n        sceneMap = new HashMap<>();\n        sceneMap.put(\"setup\", startScene());\n        sceneMap.put(\"game\", gameScene());\n\n        primaryStage.setTitle(\"Blackjack\");\n        primaryStage.setScene(sceneMap.get(\"setup\"));\n        primaryStage.show();\n    }\n    private Scene startScene() {\n        \n        // TODO: For help button, explain to the user what the shuffle percentage/cut card does (it is the percentage\n        //  of the deck('s) left for when the dealer shuffles.) other than that just find blackjack rules somewhere\n        //  also explain to the user how to accesses the secret settings (click blackjack label)\n\n\n        ImageView blackjacktitle = getImageView();\n\n        blackjack = new Label(\"Blackjack\");\n        blackjack.setStyle(\"-fx-cursor: hand; -fx-font-family: 'Constantia'; -fx-text-fill: black; \" +\n                \"-fx-font-size: 60px; -fx-font-weight: bold;\"); // css styling to allow clickable label\n\n        // hover text\n        Tooltip blackjackTooltip = new Tooltip(\"Click for advanced settings\");\n        blackjackTooltip.setStyle(\"-fx-font-size: 10pt;\");\n        blackjackTooltip.setShowDelay(Duration.seconds(0.01));\n        Tooltip.install(blackjack, blackjackTooltip);\n\n        // this took way to long, this handles the secret settings for setting deck amount and cut card\n        blackjack.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> {\n            // create dialog\n            Dialog<Pair<String, String>> dialog = new Dialog<>();\n            dialog.setTitle(\"Advanced Settings\");\n            dialog.setHeaderText(\"Defaults Values Are 30% and 1 deck\");\n\n            // set the button types\n            ButtonType applyButtonType = new ButtonType(\"Apply\", ButtonBar.ButtonData.OK_DONE);\n            dialog.getDialogPane().getButtonTypes().addAll(applyButtonType, ButtonType.CANCEL);\n\n            // create the cut card and deck amount inputs\n            GridPane grid = new GridPane();\n            grid.setHgap(10);\n            grid.setVgap(10);\n            grid.setPadding(new Insets(20, 150, 10, 10));\n\n            TextField cutCardInput = new TextField();\n            cutCardInput.setPromptText(\"Between 30-90\");\n            TextField deckAmountInput = new TextField();\n            deckAmountInput.setPromptText(\"Must be > 0\");\n            CheckBox hiLowCountShow = new CheckBox(\"Enable Hi-Low Counter\");\n            CheckBox showStrategyChart = new CheckBox(\"Show Strategy Chart\");\n\n            grid.add(new Label(\"Deck Shuffle %:\"), 0, 0);\n            grid.add(cutCardInput, 1, 0);\n            grid.add(new Label(\"Deck Amount:\"), 0, 1);\n            grid.add(deckAmountInput, 1, 1);\n            grid.add(hiLowCountShow, 1, 2);\n            grid.add(showStrategyChart, 1, 3);\n\n            // enable/disable the apply button depending on whether both inputs are used\n            Node applyButton = dialog.getDialogPane().lookupButton(applyButtonType);\n            applyButton.setDisable(true);\n\n            // validates input\n            ChangeListener<String> validationListener = (observable, oldValue, newValue) -> {\n                boolean isCutCardValid;\n                boolean isDeckAmountValid;\n\n                try {\n                    int cutCardValue = Integer.parseInt(cutCardInput.getText().trim());\n                    isCutCardValid = cutCardValue >= 30 && cutCardValue <= 90;\n                } catch (NumberFormatException e) {\n                    isCutCardValid = false;\n                }\n\n                try {\n                    int deckAmountValue = Integer.parseInt(deckAmountInput.getText().trim());\n                    isDeckAmountValid = deckAmountValue > 0;\n                } catch (NumberFormatException e) {\n                    isDeckAmountValid = false;\n                }\n\n                applyButton.setDisable(!isCutCardValid || !isDeckAmountValid);\n            };\n\n            cutCardInput.textProperty().addListener(validationListener);\n            deckAmountInput.textProperty().addListener(validationListener);\n\n            dialog.getDialogPane().setContent(grid);\n\n            // Convert the result to a pair of cut card and deck amount when the apply button is clicked.\n            dialog.setResultConverter(dialogButton -> {\n                if (dialogButton == applyButtonType) {\n                    return new Pair<>(cutCardInput.getText(), deckAmountInput.getText());\n                }\n                return null;\n            });\n\n            // Show the dialog and wait for the user to click apply or cancel\n            Optional<Pair<String, String>> result = dialog.showAndWait();\n\n            result.ifPresent(cutDeckAmount -> {\n                cutCard = Double.parseDouble(cutDeckAmount.getKey());\n                deckAmount = Integer.parseInt(cutDeckAmount.getValue());\n            });\n        });\n\n        h1 = new HBox(20, blackjacktitle, blackjack);\n        h1.setAlignment(Pos.CENTER);\n        moneyprompt = new TextField();\n\n        moneyprompt.setMaxWidth(200);\n//        moneyprompt.setOnKeyPressed(e -> {\n//            if(e.getCode() == KeyCode.ENTER) {\n//                validateMoneyInput();\n//            }\n//        });\n        moneyLabel = new Label(\"Enter starting money amount:\");\n\n\n        moneyLabel.setStyle(\"-fx-font-size: 16px; -fx-text-fill: black;\");\n\n        play = new Button(\"Play\");\n        play.setStyle(\"-fx-font-size: 20px; -fx-padding: 5px 10px; -fx-border-radius: 15px; -fx-background-radius: 15px;\");\n        play.setMinWidth(100);\n        play.setMinHeight(45);\n        play.setOnAction(e -> handlePlayAction());\n\n        help = new Button(\"Help?\");\n        help.setStyle(\"-fx-font-size: 14px;\");\n        help.setMinWidth(30);\n        help.setMinHeight(15);\n\n        Button spaceButton = new Button(\"Help?\");\n        spaceButton.setStyle(\"-fx-text-fill: transparent;-fx-background-color: transparent;-fx-font-size: 14px;\");\n        spaceButton.setMinWidth(30);\n        spaceButton.setMinHeight(15);\n        spaceButton.setOpacity(1);\n\n        v1 = new VBox(20, h1, moneyLabel, moneyprompt, play);\n        v1.setPrefWidth(500);\n        v1.setMaxWidth(500);\n        v1.setAlignment(Pos.CENTER);\n        VBox.setMargin(h1, new Insets(0, 0, 0, -35));\n        VBox.setMargin(moneyLabel, new Insets(0, 0, -15, 0));\n\n        BorderPane borderPane = new BorderPane();\n        borderPane.setCenter(v1);\n        borderPane.setRight(help);\n        borderPane.setLeft(spaceButton);\n\n\n        borderPane.setStyle(\"-fx-background-color: #005e30;\");\n        BorderPane.setMargin(help, new Insets(560, 10, 0, 0));\n\n        return new Scene(borderPane, 1200, 600);\n    }\n\n    private static ImageView getImageView() {\n        Image bj = new Image(\"blackjack.png\");\n        ImageView blackjacktitle = new ImageView(bj);\n        blackjacktitle.setFitWidth(120);\n        blackjacktitle.setFitHeight(120);\n        blackjacktitle.setPreserveRatio(true);\n        blackjacktitle.setSmooth(true);\n        return blackjacktitle;\n    }\n\n\n    private void handlePlayAction() {\n        validateMoneyInput();\n    }\n\n    private void validateMoneyInput() {\n        try {\n            money = Double.parseDouble(moneyprompt.getText());\n            if (money > 0) {\n                primary.setScene(sceneMap.get(\"game\"));\n                primary.show();\n                gameplay(); // this will start the game\n\n            } else {\n                showAlert(\"Please try a Valid Money input\");\n            }\n        } catch (NumberFormatException e) {\n            showAlert(\"Please enter a valid starting money amount (amount>0)\");\n        }\n\n    }\n\n    private void showAlert(String msg) {\n        Alert alert = new Alert(Alert.AlertType.ERROR);\n        alert.setTitle(\"\");\n        alert.setHeaderText(null);\n        alert.setContentText(msg);\n        alert.showAndWait();\n    }\n\n    public Scene gameScene() {\n        if (bGame == null) {\n            bGame = new BlackjackGame();\n        }\n        Image ebut = new Image(\"exit.png\");\n        ImageView exitpic = new ImageView(ebut);\n\n        exit = new Button();\n        exitpic.setFitHeight(28);\n        exitpic.setFitWidth(28);\n        exitpic.setPreserveRatio(true);\n        exit.setGraphic(exitpic);\n        HBox exitBox = new HBox(exit);\n        VBox.setMargin(exitBox, new Insets(-56, 0, 0, 0));\n        exit.setOnAction(e -> {\n            primary.setScene(sceneMap.get(\"setup\"));\n            betInput.clear();\n            resetGame();\n        });\n\n        int playerScore = bGame.gameLogic.handTotal(bGame.playerHand);\n\n        String yScoreLabel = String.format(\"Your Score\\n         %d         \", playerScore);\n        yScore = new Label(yScoreLabel);\n        VBox.setMargin(yScore, new Insets(250, 0, 0, 0));\n        yScore.setStyle(\"-fx-font-family: 'Constantia'; -fx-text-fill: white; -fx-font-size: 21px; -fx-font-weight: bold;\");\n        hit = new Button(\"HIT\");\n        hit.setStyle(\"-fx-font-size: 30px; -fx-padding: 10px 30px;-fx-border-radius: 15px; -fx-background-radius: 15px;\");\n        VBox.setMargin(hit, new Insets(145, 0, 0, 20));\n        leftGame = new VBox(exitBox, yScore, hit);\n\n        dCards = new HBox(16);\n        dCards.setAlignment(Pos.CENTER);\n        dCards.setMinWidth(800);\n        dCards.setMaxWidth(800);\n        dCards.setMinHeight(138);\n        dCards.setPadding(new Insets(15, 15, 15, 15));\n        VBox.setMargin(dCards, new Insets(0, 0, 0, 0));\n        dCards.setStyle(\"-fx-background-color: transparent; -fx-border-color: black; -fx-border-width: 1px; -fx-border-radius: 5px;\");\n\n        // instead of this being a label I changed it to a button to get the text from the text box\n        // Label betlabel = new Label(\"Enter bet amount:\"); did not remove in case still needed\n        betlabel = new Button(\"Set Bet And Start Hand\"); // kept the same name \"betLable\" should be changed to setBet for readibility\n\n        betlabel.setStyle(\"-fx-font-weight: 600;-fx-text-fill: black\");\n        VBox.setMargin(betlabel, new Insets(120, 15, 15, 15));\n        betInput = new TextField();\n        betInput.setMaxWidth(100);\n\n        centerPop = new Label(\"\");\n        moneyamtlabel = String.format(\"%.2f\", money);\n\n        moneyamt = new Label(moneyamtlabel);\n        moneyamt.setStyle(\"-fx-text-fill: white;-fx-font-size: 14;\");\n        VBox.setMargin(moneyamt, new Insets(70, 0, 0, 0));\n\n        pCards = new HBox(16);\n        pCards.setAlignment(Pos.CENTER);\n        pCards.setMinWidth(800);\n        pCards.setMaxWidth(800);\n        pCards.setMinHeight(138);\n        pCards.setPadding(new Insets(15, 15, 15, 15));\n        VBox.setMargin(pCards, new Insets(10, 0, 0, 0));\n        pCards.setStyle(\"-fx-background-color: transparent; -fx-border-color: black; -fx-border-width: 1px; -fx-border-radius: 5px;\");\n\n        centerGame = new VBox(dCards, betlabel, betInput, centerPop, moneyamt, pCards);\n        dScore = new Label(\"\");\n        VBox.setMargin(dScore, new Insets(226, 0, 0, 0));\n        dScore.setStyle(\"-fx-font-family: 'Constantia'; -fx-text-fill: white; -fx-font-size: 21px; -fx-font-weight: bold;\");\n\n        stay = new Button(\"STAY\");\n        VBox.setMargin(stay, new Insets(144, 0, 0, 0));\n        stay.setStyle(\"-fx-font-size: 30px; -fx-padding: 10px 15px;-fx-border-radius: 15px; -fx-background-radius: 15px;\");\n\n        rightGame = new VBox(dScore, stay);\n\n        BorderPane gamePane = new BorderPane();\n        centerGame.setAlignment(Pos.CENTER);\n        leftGame.setAlignment(Pos.CENTER);\n        rightGame.setAlignment(Pos.CENTER);\n        gamePane.setLeft(leftGame);\n        gamePane.setCenter(centerGame);\n        gamePane.setRight(rightGame);\n        gamePane.setStyle(\"-fx-background-color: #005e30;\");\n\n        return new Scene(gamePane, 1200, 600);\n    }\n\n    // this method is what controls the gameplay, this must be called once the starting money amount is set\n    // this method should only work with button actions and grab input from text fields, it should not create elements.\n    private void gameplay() {\n        final boolean[] isNewHand = {true};\n\n        // starts a new game with the desired deck amount and shuffle point (cutCard)\n        bGame = new BlackjackGame(deckAmount, cutCard);\n\n        // double for bet, string for bet (when taken from text field)\n        final String[] betAsString = new String[1];\n\n        // sets the starting amount of money, should only happen at start of the game (not the start of each hand)\n        bGame.totalWinnings = money;\n\n        // set the initial amount of money\n        moneyamt.setText(String.format(\"%.2f\", bGame.totalWinnings));\n\n        // Basically this signifies that there is a new hand thus this button needs to be disabled unless a new\n        // hand can happen\n        betlabel.setOnAction(new EventHandler<ActionEvent>() {\n            @Override\n            public void handle(ActionEvent actionEvent) {\n                // get text\n                betAsString[0] = betInput.getText();\n\n                // this will throw an exception if the input is in valid\n                try {\n                    betAsString[0] = betInput.getText();\n                    if (!isNewHand[0]) {\n                        showAlert(\"Can not change bet during hand\");\n                    }\n                    else if (Double.parseDouble(betAsString[0]) > bGame.totalWinnings) {\n                        showAlert(\"Must change bet amount, not enough winnings\");\n                    } else {\n                        bGame.currentBet = Double.parseDouble(betAsString[0]);\n\n                        // start new hand\n                        if (bGame.newHand()) {\n                            showAlert(\"Deck was shuffled\");\n                        }\n\n                        // set boolean too false to not allow new hand until current hand is over\n                        isNewHand[0] = false;\n\n                        // we are going to minus the bet from the money total visually\n                        moneyamt.setText(String.format(\"%.2f\", bGame.totalWinnings - bGame.currentBet));\n\n                        // clear old hand\n                        dCards.getChildren().clear();\n                        pCards.getChildren().clear();\n\n                        // set dealers cards pictures\n                        for (int i = 0; i < bGame.bankerHand.size(); i++) {\n                            Image bCard;\n                            ImageView bCardView;\n\n                            // hides last card\n                            if (i == bGame.bankerHand.size() - 1) {\n                                bCard = new Image(\"theseCardsMightBeBetter/Medium/Back Blue 1.png\");\n                                bCardView = new ImageView(bCard);\n                                bCardView.setId(\"backCard\"); // reference so we know which one to flip\n                            } else {\n\n                                // set path name\n                                String cardImageName = \"theseCardsMightBeBetter/Medium/\" + bGame.bankerHand.get(i).suit\n                                        + \" \" + bGame.bankerHand.get(i).face + \".png\";\n                                bCard = new Image(cardImageName);\n                                bCardView = new ImageView(bCard);\n                            }\n\n                            dCards.getChildren().add(bCardView);\n                        }\n\n                        // set players cards pictures\n                        for (int i = 0; i < bGame.playerHand.size(); i++) {\n                            // set path name\n                            String cardImageName = \"theseCardsMightBeBetter/Medium/\" + bGame.playerHand.get(i).suit\n                                    + \" \" + bGame.playerHand.get(i).face + \".png\";\n\n                            Image pCard = new Image(cardImageName);\n                            ImageView pCardView = new ImageView(pCard);\n                            pCards.getChildren().add(pCardView);\n                            int newPlayerScore = bGame.gameLogic.handTotal(bGame.playerHand);\n                            yScore.setText(String.format(\"Your Score\\n         %d         \", newPlayerScore));\n                        }\n                    }\n                } catch (NumberFormatException e) {\n                    showAlert(\"Must enter a valid bet\");\n                }\n            }\n        });\n\n        hit.setOnAction(new EventHandler<ActionEvent>() {\n            @Override\n            public void handle(ActionEvent actionEvent) {\n                boolean playerHitRes = bGame.playerHit();\n\n                // set card image for player\n                String cardImageName = \"theseCardsMightBeBetter/Medium/\" + bGame.playerHand.getLast().suit\n                        + \" \" + bGame.playerHand.getLast().face + \".png\";\n                System.out.println(cardImageName);\n\n                Image pCard = new Image(cardImageName);\n                ImageView pCardView = new ImageView(pCard);\n                pCards.getChildren().add(pCardView);\n                int newPlayerScore = bGame.gameLogic.handTotal(bGame.playerHand);\n                yScore.setText(String.format(\"Your Score\\n         %d         \", newPlayerScore));\n\n                if(!playerHitRes) {\n                    showAlert(\"You Busted!!!\");\n                    // evaluate winnings\n                    bGame.evaluateWinnings();\n                    if (Math.abs(bGame.totalWinnings) < 0.01) {\n                        showAlert(\"Out of money, sending you back to the title screen.\");\n                        primary.setScene(sceneMap.get(\"setup\"));\n                        betInput.clear();\n                        resetGame();\n\n                    }\n                    isNewHand[0] = true;\n\n                    // update winnings\n                    moneyamt.setText(String.format(\"%.2f\", bGame.totalWinnings));\n\n                    // clear old hand\n                    dCards.getChildren().clear();\n                    pCards.getChildren().clear();\n                    yScore.setText(\"Your Score\\n         0         \");\n                    dScore.setText(\"\");\n                }\n            }\n        });\n\n        stay.setOnAction(new EventHandler<ActionEvent>() {\n            @Override\n            public void handle(ActionEvent actionEvent) {\n                boolean bankerReturn = bGame.playerStay();\n                double evWiningReturn = bGame.evaluateWinnings();\n                int newDealerScore = bGame.gameLogic.handTotal(bGame.bankerHand);\n                dScore.setText(String.format(\"Dealer Score\\n            %d            \", newDealerScore));\n\n                // flip the flip card\n                Card flippedCard = bGame.bankerHand.get(1); // get the second card\n                String flippedCardImageName = \"theseCardsMightBeBetter/Medium/\" +\n                        flippedCard.suit + \" \" + flippedCard.face + \".png\";\n                Image flippedCardImage = new Image(flippedCardImageName);\n                ImageView flippedCardView = (ImageView) dCards.lookup(\"#backCard\");\n                flippedCardView.setImage(flippedCardImage); // Update the image of the flipped card\n\n                // shows the dealers cards but with a delay TODO: delay does not work, worry about that if time\n                // loop through the rest of the cards if there are any\n                for (int i = 2; i < bGame.bankerHand.size(); i++) {\n                    // just swap the hidden card\n                    String cardImageName = \"theseCardsMightBeBetter/Medium/\" + bGame.bankerHand.get(i).suit\n                            + \" \" + bGame.bankerHand.get(i).face + \".png\";\n                    Image bCard = new Image(cardImageName);\n                    ImageView bCardView = new ImageView(bCard);\n                    dCards.getChildren().add(bCardView);\n                }\n\n                if (!bankerReturn) {\n                    showAlert(\"Banker Busted, You Win!!!\");\n                } else {\n                    // evaluate winnings (evaluateWinnings returns negative if player lost)\n                    if (evWiningReturn < 0) {\n                        System.out.println(evWiningReturn);\n                        System.out.println(bGame.currentBet);\n                        // player lost\n                        showAlert(\"You Lost!!!\");\n                    } else if (evWiningReturn > 0) {\n                        System.out.println(evWiningReturn);\n                        System.out.println(bGame.currentBet);\n                        // player won\n                        showAlert(\"You Won!!!\");\n                    } else {\n                        System.out.println(evWiningReturn);\n                        System.out.println(bGame.currentBet);\n                        // push\n                        showAlert(\"Push!!!\");\n                    }\n                }\n                if (Math.abs(bGame.totalWinnings) < 0.01) {\n                    showAlert(\"Out of money, sending you back to the title screen.\");\n                    primary.setScene(sceneMap.get(\"setup\"));\n                    betInput.clear();\n                    resetGame();\n\n                }\n                isNewHand[0] = true;\n\n                // update winnings\n                moneyamt.setText(String.format(\"%.2f\", bGame.totalWinnings));\n\n                // clear old hand\n                dCards.getChildren().clear();\n                pCards.getChildren().clear();\n                yScore.setText(\"Your Score\\n         0         \");\n                dScore.setText(\"\");\n            }\n        });\n    }\n\n    // Method to reset the game\n    private void resetGame() {\n        bGame = new BlackjackGame();\n        money = 0;\n        moneyprompt.clear();\n        dCards.getChildren().clear();\n        pCards.getChildren().clear();\n        deckAmount = 1;\n        cutCard = 0.30;\n        yScore.setText(\"Your Score\\n         0         \");\n        dScore.setText(\"\");\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/javaFxFront.java b/src/main/java/javaFxFront.java
--- a/src/main/java/javaFxFront.java	(revision d24ea282a2247bec4d059a2af5c340c52e7d0b20)
+++ b/src/main/java/javaFxFront.java	(date 1710350782397)
@@ -63,7 +63,7 @@
     // Additional fields
     private String moneyamtlabel;
 
-
+    // start scene
     @Override
     public void start(Stage primaryStage) throws Exception {
         primary = primaryStage;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"c868ad42-8da6-4b3a-85e4-405ff5ae5850\" name=\"Changes\" comment=\"Cleaning up code\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/javaFxFront.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/javaFxFront.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 3\n}</component>\n  <component name=\"ProjectId\" id=\"2d99fHZtFy1bRTrhxZ4sudFgxgx\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;JUnit.TestGame.executor&quot;: &quot;Run&quot;,\n    &quot;Maven.project2 [clean,compile,exec:java].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.project2 [mvn,clean,compile,exec:java].executor&quot;: &quot;Run&quot;,\n    &quot;Maven.project2 [org.apache.maven.plugins:maven-clean-plugin:3.2.0:clean].executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/home/kyle/Documents/csSpring24/cs342/projects/project2/src/main/resources&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/resources\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"project2 [clean,compile,exec:java]\" type=\"MavenRunConfiguration\" factoryName=\"Maven\" nameIsGenerated=\"true\">\n      <MavenSettings>\n        <option name=\"myGeneralSettings\" />\n        <option name=\"myRunnerSettings\" />\n        <option name=\"myRunnerParameters\">\n          <MavenRunnerParameters>\n            <option name=\"cmdOptions\" />\n            <option name=\"profiles\">\n              <set />\n            </option>\n            <option name=\"goals\">\n              <list>\n                <option value=\"clean\" />\n                <option value=\"compile\" />\n                <option value=\"exec:java\" />\n              </list>\n            </option>\n            <option name=\"multimoduleDir\" />\n            <option name=\"pomFileName\" />\n            <option name=\"profilesMap\">\n              <map />\n            </option>\n            <option name=\"projectsCmdOptionValues\">\n              <list />\n            </option>\n            <option name=\"resolveToWorkspace\" value=\"false\" />\n            <option name=\"workingDirPath\" value=\"$PROJECT_DIR$\" />\n          </MavenRunnerParameters>\n        </option>\n      </MavenSettings>\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"jdk-21.0.1-openjdk-21.0.1-f644763e9732-76dd8dae\" />\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-f644763e9732-563d888c\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"c868ad42-8da6-4b3a-85e4-405ff5ae5850\" name=\"Changes\" comment=\"\" />\n      <created>1709409530254</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1709409530254</updated>\n      <workItem from=\"1709409531288\" duration=\"5329000\" />\n      <workItem from=\"1709576249734\" duration=\"32651000\" />\n      <workItem from=\"1710276492069\" duration=\"23983000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Created project: made pom file, made the classes, configured maven.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709411327910</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709411327910</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Created project: made pom file, made the classes, configured maven.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709411371836</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709411371836</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Not a requirement but implementing split and insurance are kinda crucial to the gameplay of blackjack. Also implementing a card counting helper would make this actually useful (also not a requirement).\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709522597531</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709522597531</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Implemented most of the back end. Need to finish BlackjackGame.java and then I will start on the actual game. Will create a bare-bones UI to start working on the game.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709581582208</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709581582208</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Implemented most of the back end. Need to finish BlackjackGame.java and then I will start on the actual game. Will create a bare-bones UI to start working on the game.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709603086896</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709603086896</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Finished back end but a lot of logic is still on the table and where it should be implemented. Creating a crap test UI.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709604292156</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709604292156</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Finished back end but a lot of logic is still on the table and where it should be implemented. Creating a crap test UI.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709605069962</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709605069962</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Finished back end but a lot of logic is still on the table and where it should be implemented. Creating a crap test UI.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709608809446</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709608809446</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Ok im understanding more where we are going with this project now. The way we are required to adhere to certain classes definitely limits how I would like to construct this. Player.java (name should be changed probably) will hold most not if all the actual gameplay mechanics.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709665605208</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709665605208</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Ok im understanding more where we are going with this project now. The way we are required to adhere to certain classes definitely limits how I would like to construct this. Player.java (name should be changed probably) will hold most not if all the actual gameplay mechanics.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709665659927</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709665659927</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Forgot that last commit. BlackjackGame will hold the actual gameplay mechanics.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709669151885</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709669151885</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Forgot that last commit. BlackjackGame will hold the actual gameplay mechanics.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709673781207</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709673781207</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Still working on logic for the game\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709698464913</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709698464913</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Pretty much finished logic of the game. Still needs to be robustly tested.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709752331474</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709752331474</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Pretty much finished logic of the game. Still needs to be robustly tested.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709753015538</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709753015538</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Pretty much finished logic of the game. Still needs to be robustly tested.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709753180160</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709753180160</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Pretty much finished logic of the game. Still needs to be robustly tested.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709753717218</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709753717218</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Ok, you have to actually initialize the classes in the constructor for BlackjackGame not depend on magic or the grace of god to do it for you.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709770608050</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709770608050</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Testing testing testing\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709831162419</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709831162419</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Testing testing testing\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709834977383</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709834977383</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Testing testing testing\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709939037032</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709939037032</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Testing testing testing\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709939059540</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709939059540</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Put card pngs\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1709943690737</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1709943690737</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"There is a lot of things with the front end that need to be changed to work with the back end. See the front end code\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710270631178</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710270631178</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Im getting somewhere, there still might need to be a whole overhall of the front end file though. need more time\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710274258743</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710274258743</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Working on front end\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710282307482</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710282307482</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"Working on front end\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710282404276</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710282404276</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"Gameplay still does not work correctly need to fix it\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710284260483</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710284260483</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"Pretty much finished logic kind of, Buttons still need to be grayed out when you should not be using them.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710287322152</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710287322152</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"Card images where actually pretty easy. Still working on it though.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710289957446</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710289957446</updated>\n    </task>\n    <task id=\"LOCAL-00031\" summary=\"This is starting to look like blackjack. There are still a plethora of bugs but you can play it.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710290185007</created>\n      <option name=\"number\" value=\"00031\" />\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710290185007</updated>\n    </task>\n    <task id=\"LOCAL-00032\" summary=\"Game is kinda working but converting aces is broken rn.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710291819216</created>\n      <option name=\"number\" value=\"00032\" />\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710291819216</updated>\n    </task>\n    <task id=\"LOCAL-00033\" summary=\"A lot of the logic bugs have been fixed. We have to use medium cards rn even though large cards fit the most since there can be up to 11 cards in gameplay.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710294070145</created>\n      <option name=\"number\" value=\"00033\" />\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710294070145</updated>\n    </task>\n    <task id=\"LOCAL-00034\" summary=\"A lot of the logic bugs have been fixed. We have to use medium cards rn even though large cards fit the most since there can be up to 11 cards in gameplay.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710294076498</created>\n      <option name=\"number\" value=\"00034\" />\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710294076498</updated>\n    </task>\n    <task id=\"LOCAL-00035\" summary=\"Added secret settings in the label of blackjack.\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710299231366</created>\n      <option name=\"number\" value=\"00035\" />\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710299231366</updated>\n    </task>\n    <task id=\"LOCAL-00036\" summary=\"Fixing more bugs\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710299606510</created>\n      <option name=\"number\" value=\"00036\" />\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710299606510</updated>\n    </task>\n    <task id=\"LOCAL-00037\" summary=\"Fixed settings\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710300914768</created>\n      <option name=\"number\" value=\"00037\" />\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710300914768</updated>\n    </task>\n    <task id=\"LOCAL-00038\" summary=\"Fixed settings\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710304291390</created>\n      <option name=\"number\" value=\"00038\" />\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710304291390</updated>\n    </task>\n    <task id=\"LOCAL-00039\" summary=\"Fixed various bugs\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710304564244</created>\n      <option name=\"number\" value=\"00039\" />\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710304564244</updated>\n    </task>\n    <task id=\"LOCAL-00040\" summary=\"Cleaning up code\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710347160001</created>\n      <option name=\"number\" value=\"00040\" />\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710347160001</updated>\n    </task>\n    <task id=\"LOCAL-00041\" summary=\"Cleaning up code\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710347411980</created>\n      <option name=\"number\" value=\"00041\" />\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710347411980</updated>\n    </task>\n    <task id=\"LOCAL-00042\" summary=\"Cleaning up code\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710347585238</created>\n      <option name=\"number\" value=\"00042\" />\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710347585238</updated>\n    </task>\n    <task id=\"LOCAL-00043\" summary=\"Cleaning up code\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1710348381014</created>\n      <option name=\"number\" value=\"00043\" />\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710348381014</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"44\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Created project: made pom file, made the classes, configured maven.\" />\n    <MESSAGE value=\"Not a requirement but implementing split and insurance are kinda crucial to the gameplay of blackjack. Also implementing a card counting helper would make this actually useful (also not a requirement).\" />\n    <MESSAGE value=\"Implemented most of the back end. Need to finish BlackjackGame.java and then I will start on the actual game. Will create a bare-bones UI to start working on the game.\" />\n    <MESSAGE value=\"Finished back end but a lot of logic is still on the table and where it should be implemented. Creating a crap test UI.\" />\n    <MESSAGE value=\"Ok im understanding more where we are going with this project now. The way we are required to adhere to certain classes definitely limits how I would like to construct this. Player.java (name should be changed probably) will hold most not if all the actual gameplay mechanics.\" />\n    <MESSAGE value=\"Forgot that last commit. BlackjackGame will hold the actual gameplay mechanics.\" />\n    <MESSAGE value=\"Still working on logic for the game\" />\n    <MESSAGE value=\"Pretty much finished logic of the game. Still needs to be robustly tested.\" />\n    <MESSAGE value=\"Ok, you have to actually initialize the classes in the constructor for BlackjackGame not depend on magic or the grace of god to do it for you.\" />\n    <MESSAGE value=\"Testing testing testing\" />\n    <MESSAGE value=\"Put card pngs\" />\n    <MESSAGE value=\"There is a lot of things with the front end that need to be changed to work with the back end. See the front end code\" />\n    <MESSAGE value=\"Im getting somewhere, there still might need to be a whole overhall of the front end file though. need more time\" />\n    <MESSAGE value=\"Working on front end\" />\n    <MESSAGE value=\"Gameplay still does not work correctly need to fix it\" />\n    <MESSAGE value=\"Pretty much finished logic kind of, Buttons still need to be grayed out when you should not be using them.\" />\n    <MESSAGE value=\"Card images where actually pretty easy. Still working on it though.\" />\n    <MESSAGE value=\"This is starting to look like blackjack. There are still a plethora of bugs but you can play it.\" />\n    <MESSAGE value=\"Game is kinda working but converting aces is broken rn.\" />\n    <MESSAGE value=\"A lot of the logic bugs have been fixed. We have to use medium cards rn even though large cards fit the most since there can be up to 11 cards in gameplay.\" />\n    <MESSAGE value=\"Added secret settings in the label of blackjack.\" />\n    <MESSAGE value=\"Fixing more bugs\" />\n    <MESSAGE value=\"Fixed settings\" />\n    <MESSAGE value=\"Fixed various bugs\" />\n    <MESSAGE value=\"Cleaning up code\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Cleaning up code\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d24ea282a2247bec4d059a2af5c340c52e7d0b20)
+++ b/.idea/workspace.xml	(date 1710352656408)
@@ -5,7 +5,6 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="c868ad42-8da6-4b3a-85e4-405ff5ae5850" name="Changes" comment="Cleaning up code">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/javaFxFront.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/javaFxFront.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -463,7 +462,15 @@
       <option name="project" value="LOCAL" />
       <updated>1710348381014</updated>
     </task>
-    <option name="localTasksCounter" value="44" />
+    <task id="LOCAL-00044" summary="Cleaning up code">
+      <option name="closed" value="true" />
+      <created>1710350734378</created>
+      <option name="number" value="00044" />
+      <option name="presentableId" value="LOCAL-00044" />
+      <option name="project" value="LOCAL" />
+      <updated>1710350734378</updated>
+    </task>
+    <option name="localTasksCounter" value="45" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
